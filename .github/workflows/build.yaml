on:
  - push
jobs:
  test:
    runs-on: ubuntu-18.04
    steps:
      - uses: actions/setup-go@v2
        with:
          go-version: 1.14.4
        id: go
      - uses: actions/checkout@v2
      - uses: actions/cache@v2
        with:
          path: ~/go/pkg/mod
          key: go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            go-
      - run: curl -sSfL https://raw.githubusercontent.com/golangci/golangci-lint/master/install.sh | sh -s -- -b $(go env GOPATH)/bin v1.24.0
      - run: make check
      - run: bash <(curl -s https://codecov.io/bash)

  crossbuild:
    needs: test
    runs-on: macos-latest
    steps:
      - uses: actions/setup-go@v2
        with:
          go-version: 1.14.4
        id: go
      - uses: actions/checkout@v2
      - uses: actions/cache@v2
        with:
          path: ~/go/pkg/mod
          key: go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            go-
      - run: go get -v github.com/int128/goxzst github.com/int128/ghcp
        working-directory: .github
      - run: make VERSION=${GITHUB_REF#refs/tags/} dist
        env:
          GITHUB_REF: ${{ github.ref }}
      - run: make VERSION=${GITHUB_REF#refs/tags/} release
        if: startsWith(github.ref, 'refs/tags/')
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GITHUB_REF: ${{ github.ref }}

  acceptance_test:
    needs: test
    runs-on: ubuntu-18.04
    steps:
      - uses: actions/setup-go@v2
        with:
          go-version: 1.14.4
        id: go
      - uses: actions/checkout@v2
      - uses: actions/cache@v2
        with:
          path: ~/go/pkg/mod
          key: go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            go-
      # https://kind.sigs.k8s.io/docs/user/quick-start/
      - run: |
          wget -q -O ./kind "https://github.com/kubernetes-sigs/kind/releases/download/v0.7.0/kind-linux-amd64"
          chmod +x ./kind
          sudo mv ./kind /usr/local/bin/kind
          kind version
      # https://packages.ubuntu.com/xenial/libnss3-tools
      - run: sudo apt install -y libnss3-tools
      - run: echo '127.0.0.1 dex-server' | sudo tee -a /etc/hosts
      - run: make -C acceptance_test -j3 setup
      - run: make -C acceptance_test test
